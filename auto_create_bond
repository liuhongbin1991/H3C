#!/bin/bash
#***************************************************** 
#ScriptName:auto_create_bond.sh 
#Author:liu.hongbin@h3c.com  
#renewed Date:2018-05-15 17:28 
#Fuction:this shell is used to auto create a bond port

#修改系统语言包，将zh_CN.UTF-8 改成 zh_CN.GB18030
#输入命令：如vi  /etc/sysconfig/i18n （注意改好之后必须重启一下系统才行）
#sed -i -e 's/^/#/g' -e 1i\LANG="zh_CN.GB18030" /etc/sysconfig/i18n
#source /etc/sysconfig/i18n
echo "####################################################################"
echo "!!!IF Somethings You Input Wrong  Press ‘ctrl+backspace’ to Delete。!!!"
echo "####################################################################"

def_bond () {
   echo "#########################################################################"
   echo "
    mode=0 //load balancing (round-robin),both nic active.
    mode=1 //fault-tolerance (active-backup),only one nic active with a mac.
    mode=2 //(balance-xor)XOR policy,need switch support.default hash policy is des mac,controlled by xmit_hash_policy.
    mode=3 //broadcast,every nic send packets,controlled by xmit_hash_policy.
    mode=4 //802.3ad,LACP.
    mode=5 //balance-tlb，need support of Ethtool drive.
    mode=6 //balance-alb,include mode 5."
    echo "###########################################################################"

    read -p "please input your bond mode number (e.g.. mode=1):" MODE 
    read -p "please input your bond name (e.g.. bond0):" BOND
    read -p "please input your bond ip(eg.. 192.168.0.10):" IP
    read -p "please input your bond netmask(e.g.. 255.255.255.0):" NETMASK
    read -p "please input your bond gateway(e.g.. 192.168.0.1):" GATEWAY
}
def_bond
def_network () {
    echo "###############################################"
    echo "your nic list are below:"
    echo `ifconfig -a |grep mtu |grep -v br |grep -v lo|grep -v vir|grep -v ovs|awk -F':' '{print $1}'`
    echo "################################################"
    read -p   "select your bond nic (e.g.. eth0 eth1)："  NIC
    echo $NIC >> .tmp.txt
    NIC_num=`awk '{print NF }' .tmp.txt`

   for i in `seq $NIC_num`
    do
        NIC_true=`awk -v  a=$i '{ print $a }' .tmp.txt`
        DIR_NIC=/etc/sysconfig/network-scripts
        if [ $NIC_true == $NIC_true ];then
        cp $DIR_NIC/ifcfg-$NIC_true  $DIR_NIC/ifcfg-$NIC_true.bak
        echo "DEVICE=$NIC_true
            MASTER=$BOND
            SLAVE=yes" >> $DIR_NIC/ifcfg-$NIC_true
#           
    sed -i -e "/^ONBOOT/"d -e /^DEVICE/a\ONBOOT=yes $DIR_NIC/ifcfg-$NIC_true
    sed -i -e "/^NM_CONTROLLED/"d -e /^DEVICE/a\NM_CONTROLLED=no $DIR_NIC/ifcfg-$NIC_true
    sed -i -e "/^BOOTPROTO/"d -e /^DEVICE/a\BOOTPROTO=none $DIR_NIC/ifcfg-$NIC_true
     
    fi
done
     rm -rf .tmp.txt
#    cat >>$DIR_NIC/ifcfg-$BOND<<EOF
#           
#               DEVICE=$BOND
#               ONBOOT=yes
#               NM_CONTROLLED=no
#               BOOTPROTO=static
#               IPADDR=$IP
#               NETMASK=$NETMASK
#               GATEWAY=$GATEWAY         
#EOF
#或者

      echo  -e "DEVICE=$BOND\nONBOOT=yes\nNM_CONTROLLED=no\nBOOTPROTO=static\nIPADDR=$IP\nNETMASK=$NETMASK\nGATEWAY=$GATEWAY" >> $DIR_NIC/ifcfg-$BOND
#
echo " modify modprobe.d/bond.conf"
echo "##### for bond configure ######" >> /etc/modprobe.d/bond.conf
echo "alias ${BOND} bonding" >> /etc/modprobe.d/bond.conf
echo "options ${BOND} miimon=100 mode=${MODE}" >> /etc/modprobe.d/bond.conf
}
def_network
echo "wait for restart..."
sleep 3
service network restart
